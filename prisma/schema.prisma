// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum ContentStatus {
  DRAFT
  PUBLISHED
}

model Content {
  id                Int                 @id @default(autoincrement())
  code              String
  title             String          @unique
  url               String
  status            ContentStatus   @default(DRAFT)
  description       String
  publish_date      DateTime
  thumbnail         String
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  UsersContentWatch UsersContentWatch[]
  tags              Tags[] @relation("ContentTags")
  @@map("contents")
}

model User {
  id                Int                 @id @default(autoincrement())
  email             String              @unique
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  UsersContentWatch UsersContentWatch[]

  @@map("users")
}


model Tags {
  id                Int                 @id @default(autoincrement())
  name              String              @unique
  content           Content[]           @relation("ContentTags")
  @@map("ContentTags")
}

model UsersContentWatch {
  id        Int      @id @default(autoincrement())
  userId    Int?
  user      User?    @relation(fields: [userId], references: [id])
  contentId Int?
  content   Content? @relation(fields: [contentId], references: [id])
  @@unique([userId,contentId])
  @@map("content_watched")
}
